{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/game/word-raindrop.tsx","components/game/input.tsx","components/game/score-board.tsx","components/game/blocks.tsx","components/game/index.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","WordRainDrop","React","memo","forwardRef","props","ref","styles","top","boxTop","fontSize","undefined","left","right","className","style","word","Input","onEnter","useState","setValue","inputRef","useRef","useEffect","current","focus","type","onChange","e","onKeyPress","onBlur","ScoreBorad","level","score","width","marginLeft","Blocks","damage","Game","words","setWords","running","setRunning","levelRef","damageRef","hitCountPerLevelRef","scoreRef","heightDivRef","heightRef","blockDivRef","blockAreaRef","calcDamageBoundary","useCallback","divScreen","divInput","clientHeight","inputBox","getBoundingClientRect","offsetTop","useWindowResized","useInterval","doInterval","newWords","MAX_DAMAGE","LEVEL","interval","handleInput","input","result","checkHit","levelCompleted","map","boxHeight","box","height","boxLeft","boxRight","calcBox","bottom","zIndex","id","display","slot"],"mappings":"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","file":"static/js/3.cc2c2dd7.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\nimport { Word } from '../../lib/game-engine';\n\nconst WordRainDrop = React.memo(\n  React.forwardRef<HTMLSpanElement, Word>((props, ref) => {\n    const styles: React.CSSProperties = {\n      top: props.boxTop,\n      fontSize: '1.2rem',\n    };\n\n    if (props.left !== undefined) {\n      styles.left = props.left;\n    } else if (props.right !== undefined) {\n      styles.right = props.right;\n    } else {\n      styles.left = '50%';\n    }\n\n    return (\n      <span className=\"position-absolute\" style={styles} ref={ref}>\n        {props.word}\n      </span>\n    );\n  })\n);\n\nexport default WordRainDrop;\n","import React, { useState, useRef, useEffect } from 'react';\n\nconst Input = React.memo(({ onEnter }: { onEnter: (input: string) => void }) => {\n  const [value, setValue] = useState('');\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const handleEnter = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      onEnter(value);\n      setValue('');\n    }\n  };\n\n  return (\n    <div className=\"input-group\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        onKeyPress={handleEnter}\n        ref={inputRef}\n        onBlur={() => {\n          if (inputRef.current) {\n            inputRef.current.focus();\n          }\n        }}\n      />\n    </div>\n  );\n});\n\nexport default Input;\n","import React from 'react';\n\nconst ScoreBorad = React.memo(({ level, score }: { level: number; score: number }) => {\n  return (\n    <div\n      className=\"position-fixed mt-2 text-center rounded-pill border-theme-2px\"\n      style={{ width: 300, top: 0, left: '50%', marginLeft: -150 }}\n    >\n      <span>레벨: {level + 1}</span>\n      <span className=\"ml-2\">점수: {score}</span>\n    </div>\n  );\n});\n\nexport default ScoreBorad;\n","import React from 'react';\nimport './blocks.css';\n\nconst Blocks = React.memo(({ damage }: { damage: number }) => {\n  return (\n    <div className=\"container-fluid blocks rounded\">\n      <div className=\"row\">\n        <div className={`col-4 block ${damage <= -1 ? 'broken' : ''}`} />\n        <div className={`col-4 block ${damage <= -2 ? 'broken' : ''}`} />\n        <div className={`col-4 block ${damage <= -3 ? 'broken' : ''}`} />\n      </div>\n      <div className=\"row\">\n        <div className={`col-4 block ${damage <= -4 ? 'broken' : ''}`} />\n        <div className={`col-4 block ${damage <= -5 ? 'broken' : ''}`} />\n        <div className={`col-4 block ${damage <= -6 ? 'broken' : ''}`} />\n      </div>\n      <div className=\"row\">\n        <div className={`col-4 block ${damage <= -7 ? 'broken' : ''}`} />\n        <div className={`col-4 block ${damage <= -8 ? 'broken' : ''}`} />\n        <div className={`col-4 block ${damage <= -9 ? 'broken' : ''}`} />\n      </div>\n      <div className=\"row \">\n        <div className={`col-4 block ${damage <= -10 ? 'broken' : ''}`} />\n        <div className={`col-4 block ${damage <= -11 ? 'broken' : ''}`} />\n        <div className={`col-4 block ${damage <= -12 ? 'broken' : ''}`} />\n      </div>\n    </div>\n  );\n});\n\nexport default Blocks;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useInterval, useWindowResized } from '../../lib/custom-hooks';\nimport { doInterval, Word, checkHit, MAX_DAMAGE, LEVEL } from '../../lib/game-engine';\nimport WordRainDrop from './word-raindrop';\nimport Input from './input';\nimport ScoreBorad from './score-board';\nimport Blocks from './blocks';\nimport Adsense from '../common/adsense';\nimport './game-screen.css';\n\nconst BOTTOM_MARGIN = 20;\n\nconst Game = React.memo(() => {\n  const [words, setWords] = useState<Word[]>([]);\n  const [running, setRunning] = useState(true);\n\n  const levelRef = useRef(0);\n  const damageRef = useRef(0);\n  const hitCountPerLevelRef = useRef(0);\n  const scoreRef = useRef(0);\n\n  const heightDivRef = useRef<HTMLDivElement>(null);\n  const heightRef = useRef<number>(0);\n  const blockDivRef = useRef<HTMLDivElement>(null);\n  const blockAreaRef = useRef({ top: 0, left: 0, right: 0 });\n\n  const calcDamageBoundary = useCallback(() => {\n    const divScreen = heightDivRef.current;\n    const divInput = blockDivRef.current;\n    if (!divScreen || !divInput) {\n      return;\n    }\n\n    heightRef.current = divScreen.clientHeight;\n    const inputBox = divInput.getBoundingClientRect();\n    blockAreaRef.current = { top: inputBox.top - divScreen.offsetTop, left: inputBox.left, right: inputBox.right };\n  }, []);\n\n  useEffect(() => {\n    calcDamageBoundary();\n  }, [calcDamageBoundary]);\n\n  useWindowResized(() => {\n    calcDamageBoundary();\n  });\n\n  useInterval(\n    () => {\n      const [newWords, damage] = doInterval(\n        levelRef.current,\n        'ko',\n        words,\n        heightRef.current,\n        blockAreaRef.current,\n        BOTTOM_MARGIN\n      );\n      if (damageRef.current !== null) {\n        damageRef.current += damage;\n\n        if (damageRef.current <= MAX_DAMAGE) {\n          setRunning(false);\n        }\n      }\n      setWords(newWords);\n    },\n    running ? LEVEL[levelRef.current].interval : null\n  );\n\n  const handleInput = useCallback(\n    (input: string) => {\n      const result = checkHit(words, input, levelRef.current, hitCountPerLevelRef.current);\n      if (result) {\n        hitCountPerLevelRef.current += 1;\n        scoreRef.current += result.score;\n        if (result.levelCompleted) {\n          levelRef.current = levelRef.current + 1;\n          hitCountPerLevelRef.current = 0;\n        }\n        setWords(result.words);\n      }\n    },\n    [words]\n  );\n\n  const calcBox = (ref: HTMLSpanElement | null, i: number) => {\n    if (ref) {\n      if (!words[i].boxHeight) {\n        const newWords = [...words];\n        const box = ref.getBoundingClientRect();\n        newWords[i].boxHeight = box.height;\n        newWords[i].boxLeft = box.left;\n        newWords[i].boxRight = box.right;\n        setWords(newWords);\n      }\n    }\n  };\n\n  return (\n    <div className=\"h-100 position-relative\" ref={heightDivRef}>\n      <ScoreBorad level={levelRef.current} score={scoreRef.current} />\n\n      {words.map((word, i) => (\n        <WordRainDrop key={i} {...word} ref={(ref) => calcBox(ref, i)} />\n      ))}\n\n      <div\n        className=\"position-absolute\"\n        style={{ width: 300, bottom: 0, left: '50%', marginLeft: -150, zIndex: 1010 }}\n        ref={blockDivRef}\n      >\n        <Input onEnter={handleInput} />\n        <Blocks damage={damageRef.current} />\n      </div>\n\n      <div className=\"position-absolute w-100\" id=\"wave\" style={{ bottom: 0, height: BOTTOM_MARGIN, zIndex: 1000 }} />\n\n      <div id=\"right-ad\">\n        <Adsense style={{ display: 'inline-block', width: '160px', height: '600px' }} slot=\"8494642588\" />\n      </div>\n    </div>\n  );\n});\n\nexport default Game;\n"],"sourceRoot":""}